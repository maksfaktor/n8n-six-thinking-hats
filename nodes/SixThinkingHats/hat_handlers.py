import logging

class HatHandler:
    def __init__(self, client):
        self.client = client
        self.hat_colors = {
            'white': '‚ö™',
            'red': 'üî¥',
            'black': '‚ö´',
            'yellow': 'üíõ',
            'green': 'üíö',
            'blue': 'üíô'
        }
        self.hat_prompts = {
            'white': """
                –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Ç–µ–º—É —Å –ø–æ–∑–∏—Ü–∏–∏ –ë–µ–ª–æ–π —à–ª—è–ø—ã (—Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è):
                –¢–µ–º–∞: {topic}
                –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞:
                - –î–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–∞–∫—Ç–∞—Ö
                - –û–±—ä–µ–∫—Ç–∏–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                - –ü—Ä–æ–±–µ–ª–∞—Ö –≤ –∑–Ω–∞–Ω–∏—è—Ö
                –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–∞–∫—Ç–æ–≤.
            """,
            'red': """
                –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Ç–µ–º—É —Å –ø–æ–∑–∏—Ü–∏–∏ –ö—Ä–∞—Å–Ω–æ–π —à–ª—è–ø—ã (—ç–º–æ—Ü–∏–∏ –∏ —á—É–≤—Å—Ç–≤–∞):
                –¢–µ–º–∞: {topic}
                –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞:
                - –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏—è—Ö
                - –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞—Ö
                - –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ—â—É—â–µ–Ω–∏—è—Ö
                –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–æ–π –±–µ–∑ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è.
            """,
            'black': """
                –û—Ü–µ–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Ç–µ–º—É —Å –ø–æ–∑–∏—Ü–∏–∏ –ß–µ—Ä–Ω–æ–π —à–ª—è–ø—ã (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —Å—É–∂–¥–µ–Ω–∏–µ):
                –¢–µ–º–∞: {topic}
                –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞:
                - –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö
                - –õ–æ–≥–∏—á–µ—Å–∫–∏—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞—Ö
                - –°–ª–∞–±—ã—Ö –º–µ—Å—Ç–∞—Ö
                –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ç—â–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑.
            """,
            'yellow': """
                –ò–∑—É—á–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Ç–µ–º—É —Å –ø–æ–∑–∏—Ü–∏–∏ –ñ–µ–ª—Ç–æ–π —à–ª—è–ø—ã (–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –ø–æ–∑–∏—Ç–∏–≤):
                –¢–µ–º–∞: {topic}
                –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞:
                - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
                - –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö
                - –ü–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–∞—Ö
                –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –≤—ã–≥–æ–¥—ã.
            """,
            'green': """
                –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Ç–µ–º—É —Å –ø–æ–∑–∏—Ü–∏–∏ –ó–µ–ª–µ–Ω–æ–π —à–ª—è–ø—ã (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å):
                –¢–µ–º–∞: {topic}
                –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞:
                - –ù–æ–≤—ã—Ö –∏–¥–µ—è—Ö
                - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–∞—Ö
                - –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö
                –°–æ–∑–¥–∞–π—Ç–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã.
            """,
            'blue': """
                –û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ –º—ã—Å–ª–∏ –æ —Å–ª–µ–¥—É—é—â–µ–π —Ç–µ–º–µ —Å –ø–æ–∑–∏—Ü–∏–∏ –°–∏–Ω–µ–π —à–ª—è–ø—ã (–∫–æ–Ω—Ç—Ä–æ–ª—å –ø—Ä–æ—Ü–µ—Å—Å–∞):
                –¢–µ–º–∞: {topic}
                –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞:
                - –û–±–∑–æ—Ä–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –º—ã—à–ª–µ–Ω–∏—è
                - –°–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö
                - –ü—É–Ω–∫—Ç–∞—Ö –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è
                –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–µ–∑—é–º–µ –∏ –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π.
            """
        }

    def format_hat_output(self, hat_color, analysis):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—ã–≤–æ–¥ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–π —à–ª—è–ø—ã"""
        emoji = self.hat_colors.get(hat_color, 'üé©')
        hat_name = hat_color.upper()
        separator = "=" * 50
        return f"""
{separator}
{emoji} {hat_name} –®–õ–Ø–ü–ê {emoji}
{separator}
{analysis}
"""

    def process_hat(self, hat_color, topic):
        import logging
        logging.info(f"–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è —à–ª—è–ø—ã {hat_color} –∏ —Ç–µ–º—ã: {topic}")

        if hat_color not in self.hat_prompts:
            logging.error(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç —à–ª—è–ø—ã: {hat_color}")
            return {"error": f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç —à–ª—è–ø—ã: {hat_color}"}

        prompt_template = self.hat_prompts[hat_color]
        formatted_prompt = prompt_template.format(topic=topic)

        logging.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Anthropic API")
        try:
            # the newest Anthropic model is "claude-3-5-sonnet-20241022" which was released October 22, 2024
            response = self.client.messages.create(
                model="claude-3-5-sonnet-20241022",
                max_tokens=1000,
                messages=[{"role": "user", "content": formatted_prompt}]
            )

            logging.info("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API")

            if not response.content:
                logging.error("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API")
                return {"error": "–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API"}

            analysis = response.content[0].text.strip()
            formatted_output = self.format_hat_output(hat_color, analysis)
            print(formatted_output)  # –í—ã–≤–æ–¥–∏–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å

            logging.info(f"–ê–Ω–∞–ª–∏–∑ –¥–ª—è —à–ª—è–ø—ã {hat_color}: {analysis[:100]}...")

            return {
                "analysis": analysis,
                "hat_color": hat_color,
                "formatted_output": formatted_output
            }

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —à–ª—è–ø—ã {hat_color}: {str(e)}")
            return {"error": f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {str(e)}"}